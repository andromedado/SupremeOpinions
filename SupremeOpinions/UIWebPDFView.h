//
//  UIWebPDFView.h
//  SupremeOpinions
//
//  Created by Shad Downey on 3/8/15.
//
//

#ifndef SupremeOpinions_UIWebPDFView_h
#define SupremeOpinions_UIWebPDFView_h

/*
 * This header is generated by classdump-dyld 0.7
 * on Friday, November 7, 2014 at 1:45:51 AM Eastern European Standard Time
 * Operating System: Version 8.1 (Build 12B411)
 * Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
 * classdump-dyld is licensed under GPLv3, Copyright © 2013 by Elias Limneos.
 */

#import <UIKit/UIView.h>

@class UIImage, UIView, NSTimer, DOMNode, UIWebSelectionHandle, NSString, NSMutableArray, UIWebPDFView;

typedef struct __GSEvent* GSEventRef;

typedef struct __CFMessagePort* CFMessagePortRef;

typedef struct __IOHIDEvent* IOHIDEventRef;

typedef struct __GSKeyboard* GSKeyboardRef;

typedef struct CGImage* CGImageRef;

typedef struct _NSZone* NSZoneRef;

typedef struct {
    CGRect left;
    CGRect middle;
    CGRect right;
} SCD_Struct_UI12;

typedef struct {
    SCD_Struct_UI12 top;
    SCD_Struct_UI12 middle;
    SCD_Struct_UI12 bottom;
} SCD_Struct_UI13;

typedef struct CGColor* CGColorRef;

typedef struct __IOSurface* IOSurfaceRef;

typedef struct {
    double field1;
    double field2;
    double field3;
    double field4;
    double field5;
    double field6;
    double field7;
    double field8;
    double field9;
} SCD_Struct_UI16;

typedef struct {
    long long field1;
    long long field2;
} SCD_Struct_UI18;

typedef struct CGContext* CGContextRef;

typedef struct {
    float field1;
    float field2;
    float field3;
    float field4;
} SCD_Struct_UI20;

typedef struct {
    double field1;
    double field2;
    double field3;
    double field4;
    double field5;
} SCD_Struct_UI22;

typedef struct CGShading* CGShadingRef;

typedef union {
    float singleton;
    float array;
} SCD_Union_UI24;

typedef struct {
    int field1;
    int field2;
    int field3;
    int field4;
    BOOL field5;
    BOOL field6;
} SCD_Struct_UI25;

typedef struct {
    long long width;
    long long height;
} SCD_Struct_UI27;

typedef struct {
    unsigned val[8];
} SCD_Struct_UI28;

typedef struct {
    BOOL field1;
    BOOL field2;
    BOOL field3;
    BOOL field4;
    BOOL field5;
    double field6;
    int field7;
} SCD_Struct_UI29;

typedef struct {
    unsigned idiom : 6;
    unsigned landscape : 1;
    unsigned split : 1;
    unsigned appearance : 8;
    unsigned rendering : 16;
} SCD_Struct_UI32;

typedef struct __CFRunLoopObserver* CFRunLoopObserverRef;

typedef struct {
    float field1;
    float field2;
    float field3;
} SCD_Struct_UI36;

typedef struct {
    CGPoint origin;
    CGPoint offset;
    int position;
    CGPoint desiredPoint;
    CGRect desiredBounds;
} SCD_Struct_UI37;

typedef struct {
    double field1;
    double field2;
    double field3;
} SCD_Struct_UI39;

typedef struct UIWebViewportConfiguration {
    CGSize size;
    float initialScale;
    float minimumScale;
    float maximumScale;
    BOOL allowsUserScaling;
} UIWebViewportConfiguration;

typedef struct {
    float x;
    float y;
    float z;
} SCD_Struct_UI45;

typedef union GLKVector3 {
    SCD_Struct_UI45 field1;
    SCD_Struct_UI45 field2;
    SCD_Struct_UI45 field3;
    float v[3];
} GLKVector3;

typedef struct {
    GLKVector3 v;
    float s;
} SCD_Struct_UI47;

typedef struct {
    float x;
    float y;
    float z;
    float w;
} SCD_Struct_UI48;

typedef union GLKQuaternion {
    SCD_Struct_UI47 field1;
    SCD_Struct_UI48 field2;
    float q[4];
} GLKQuaternion;

typedef struct {
    UIEdgeInsets quaternion;
    SCD_Struct_UI45 userAcceleration;
    SCD_Struct_UI45 rotationRate;
    SCD_Struct_UI45 magneticField;
    int magneticFieldCalibrationLevel;
    BOOL doingYawCorrection;
    BOOL doingBiasEstimation;
    BOOL isInitialized;
} SCD_Struct_UI50;

typedef struct {
    UIEdgeInsets field1;
    SCD_Struct_UI45 field2;
    SCD_Struct_UI45 field3;
    SCD_Struct_UI45 field4;
    int field5;
    BOOL field6;
    BOOL field7;
    BOOL field8;
} SCD_Struct_UI51;

typedef struct __CFBundle* CFBundleRef;

typedef struct __CFStringTokenizer* CFStringTokenizerRef;

typedef struct {
    CGPoint point;
    double time;
} SCD_Struct_UI56;

typedef struct {
    BOOL flipPossible;
    BOOL rectsChanged;
    CGRect originalSelectionRect;
} SCD_Struct_UI59;

typedef struct UINibArchiveTableInfo {
    unsigned count;
    unsigned offset;
} UINibArchiveTableInfo;

typedef struct UINibDecoderHeader {
    unsigned char type[10];
    unsigned formatVersion;
    unsigned coderVersion;
    UINibArchiveTableInfo objects;
    UINibArchiveTableInfo keys;
    UINibArchiveTableInfo values;
    UINibArchiveTableInfo classes;
} UINibDecoderHeader;

typedef struct UINibDecoderRecursiveState {
    long long objectID;
    long long nextGenericKey;
    unsigned nextValueSearchIndex;
    BOOL replaced;
} UINibDecoderRecursiveState;

typedef struct {
    double amount;
    int unit;
} SCD_Struct_UI68;

typedef struct {
    SCD_Struct_UI68 field1[4];
} SCD_Struct_UI69;

typedef struct __DCSDictionary* DCSDictionaryRef;

typedef struct {
    BOOL itemIsEnabled[25];
    char timeString[64];
    int gsmSignalStrengthRaw;
    int gsmSignalStrengthBars;
    char serviceString[100];
    char serviceCrossfadeString[100];
    char serviceImages[2][100];
    char operatorDirectory[1024];
    unsigned serviceContentType;
    int wifiSignalStrengthRaw;
    int wifiSignalStrengthBars;
    unsigned dataNetworkType;
    int batteryCapacity;
    unsigned batteryState;
    char batteryDetailString[150];
    int bluetoothBatteryCapacity;
    int thermalColor;
    unsigned thermalSunlightMode : 1;
    unsigned slowActivity : 1;
    unsigned syncActivity : 1;
    char activityDisplayId[256];
    unsigned bluetoothConnected : 1;
    unsigned displayRawGSMSignal : 1;
    unsigned displayRawWifiSignal : 1;
    unsigned locationIconType : 1;
    unsigned quietModeInactive : 1;
    unsigned tetheringConnectionCount;
} SCD_Struct_UI71;

typedef struct {
    BOOL overrideItemIsEnabled[25];
    unsigned overrideTimeString : 1;
    unsigned overrideGsmSignalStrengthRaw : 1;
    unsigned overrideGsmSignalStrengthBars : 1;
    unsigned overrideServiceString : 1;
    unsigned overrideServiceImages : 2;
    unsigned overrideOperatorDirectory : 1;
    unsigned overrideServiceContentType : 1;
    unsigned overrideWifiSignalStrengthRaw : 1;
    unsigned overrideWifiSignalStrengthBars : 1;
    unsigned overrideDataNetworkType : 1;
    unsigned disallowsCellularDataNetworkTypes : 1;
    unsigned overrideBatteryCapacity : 1;
    unsigned overrideBatteryState : 1;
    unsigned overrideBatteryDetailString : 1;
    unsigned overrideBluetoothBatteryCapacity : 1;
    unsigned overrideThermalColor : 1;
    unsigned overrideSlowActivity : 1;
    unsigned overrideActivityDisplayId : 1;
    unsigned overrideBluetoothConnected : 1;
    unsigned overrideDisplayRawGSMSignal : 1;
    unsigned overrideDisplayRawWifiSignal : 1;
    SCD_Struct_UI71 values;
} SCD_Struct_UI72;

typedef struct __CFMachPort* CFMachPortRef;

typedef struct __CFRunLoopSource* CFRunLoopSourceRef;

typedef struct {
    BOOL animateContentRotation;
    BOOL preserveHeight;
    BOOL avoidFadingBottomOfContent;
    BOOL skipSnapshotOfEndState;
    BOOL preventAdditveAnimations;
    double contentStretchRightEdgeInset;
    int edgeClip;
} SCD_Struct_UI75;

typedef struct UIPeripheralAnimationGeometry {
    CGPoint outPosition;
    CGPoint inPosition;
    CGRect bounds;
    CGAffineTransform transform;
    double targetFrameHeightDelta;
} UIPeripheralAnimationGeometry;

typedef struct UIKBTheme* UIKBThemeRef;

typedef struct CGGradient* CGGradientRef;

typedef struct CGPDFDocument* CGPDFDocumentRef;

typedef struct PDFHistoryItem {
    BOOL restorePending;
    BOOL isInitialScale;
    double zoomScale;
    CGPoint contentOffset;
} PDFHistoryItem;

typedef union {
    SCD_Struct_UI32 styling;
    int intValue;
} SCD_Union_UI84;

typedef struct CGPDFFont* CGPDFFontRef;

typedef struct {
    SCD_Struct_UI48 m_axisX;
    SCD_Struct_UI48 m_axisY;
    SCD_Struct_UI48 m_axisZ;
    SCD_Struct_UI48 m_trans;
} SCD_Struct_UI88;

typedef struct __CFUserNotification* CFUserNotificationRef;

typedef struct {
    NSRange src;
    NSRange dst;
    BOOL isEqual;
} SCD_Struct_UI91;

typedef struct {
    long long userInterfaceIdiom;
    double displayScale;
    long long touchLevel;
    long long interactionModel;
    long long horizontalSizeClass;
    long long verticalSizeClass;
} SCD_Struct_UI94;



/*
 * This header is generated by classdump-dyld 0.7
 * on Friday, November 7, 2014 at 1:45:59 AM Eastern European Standard Time
 * Operating System: Version 8.1 (Build 12B411)
 * Image Source: /System/Library/Frameworks/WebKit.framework/WebKit
 * classdump-dyld is licensed under GPLv3, Copyright © 2013 by Elias Limneos.
 */

@protocol UIGestureRecognizerDelegate <NSObject>
@optional
-(BOOL)gestureRecognizerShouldBegin:(id)arg1;
-(BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
-(BOOL)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
-(BOOL)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
-(BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;

@end

@protocol UIPopoverControllerDelegate <NSObject>
@optional
-(void)popoverControllerDidDismissPopover:(id)arg1;
-(BOOL)popoverControllerShouldDismissPopover:(id)arg1;
-(void)popoverController:(id)arg1 willRepositionPopoverToRect:(inout CGRect*)arg2 inView:(inout id*)arg3;

@end

@protocol WebPDFViewPlaceholderDelegate
@optional
-(void)didCompleteLayout;
-(void)viewWillClose;

@required
-(void)setBackgroundColor:(id)arg1;
-(CGPDFDocumentRef)cgPDFDocument;

@end
@protocol UIPDFAnnotationControllerDelegate
@optional
-(BOOL)willTrackAnnotationAtPoint:(CGPoint)arg1 controller:(id)arg2;
-(void)annotation:(id)arg1 didEndTrackingAtPoint:(CGPoint)arg2 controller:(id)arg3;
-(void)annotation:(id)arg1 wasTouchedAtPoint:(CGPoint)arg2 controller:(id)arg3;
-(void)annotation:(id)arg1 isBeingPressedAtPoint:(CGPoint)arg2 controller:(id)arg3;
-(void)annotationWasRemoved:(id)arg1 controller:(id)arg2;
-(CGImageRef)newHighlightMaskImage:(CGRect)arg1 controller:(id)arg2;
-(CGImageRef)underlineImage:(CGRect)arg1 controller:(id)arg2;
-(CGSize*)marginNoteImageSize:(id)arg1;
-(id)marginNoteImage:(id)arg1 controller:(id)arg2;

@end

@protocol UIPDFPageViewDelegate
@optional
-(void)resetZoom:(id)arg1;
-(void)zoom:(id)arg1 to:(CGRect)arg2 atPoint:(CGPoint)arg3 kind:(int)arg4;
-(void)doubleTapIn:(id)arg1 atPoint:(CGPoint)arg2;
-(BOOL)shouldRecognizeTapIn:(id)arg1 atPoint:(CGPoint)arg2;
-(void)didTap:(id)arg1 atPoint:(CGPoint)arg2;
-(BOOL)selectionWillTrack:(id)arg1;
-(void)selectionDidEndTracking:(id)arg1;
-(Class)classForAnnotationType:(const char*)arg1;
-(void)pageWasRendered:(id)arg1;

@end

@protocol UIWebPDFViewDelegate;
@class NSMutableArray, UIPDFDocument, NSObject, UITapGestureRecognizer, NSURL, NSArray, WebPDFViewPlaceholder, UIColor, NSString, NSData;

@interface UIWebPDFView : UIView <UIPDFPageViewDelegate, UIPDFAnnotationControllerDelegate, WebPDFViewPlaceholderDelegate, UIPopoverControllerDelegate, UIGestureRecognizerDelegate> {

    NSMutableArray* _backingLayerImageViews;
    CGPDFDocumentRef _cgPDFDocument;
    UIPDFDocument* _document;
    BOOL _hasScheduledCacheUpdate;
    CGRect _documentBounds;
    NSObject<UIWebPDFViewDelegate>* _pdfDelegate;
    BOOL _delegateRespondsToDidScroll;
    UITapGestureRecognizer* _tapGestureRecognizer;
    NSURL* _documentURL;
    BOOL _rotating;
    BOOL _zooming;
    double _initialZoomScale;
    CGAffineTransform _documentTransform;
    double _documentScale;
    long long _ignoreContentOffsetChanges;
    CGPoint _contentOffsetAtScrollStart;
    NSMutableArray* _pageViews;
    NSArray* _pageMinYs;
    BOOL hidePageViewsUntilReadyToRender;
    BOOL hideActivityIndicatorForUnRenderedContent;
    BOOL readyForSnapshot;
    WebPDFViewPlaceholder* pdfPlaceHolderView;
    UIColor* backgroundColorForUnRenderedContent;
    NSString* documentPassword;
    NSArray* pageRects;

}

@property (assign,nonatomic) NSObject<UIWebPDFViewDelegate>*pdfDelegate;                 //@synthesize pdfDelegate=_pdfDelegate - In the implementation block
@property (nonatomic,retain) NSURL * documentURL;                                         //@synthesize documentURL=_documentURL - In the implementation block
@property (nonatomic,readonly) CGRect documentBounds;                                     //@synthesize documentBounds=_documentBounds - In the implementation block
@property (nonatomic,readonly) unsigned long long totalPages;
@property (nonatomic,readonly) CGPDFDocumentRef cgPDFDocument;
@property (nonatomic,readonly) UIPDFDocument * document;
@property (nonatomic,readonly) NSData * documentData;
@property (assign,nonatomic) BOOL readyForSnapshot;
@property (assign) WebPDFViewPlaceholder * pdfPlaceHolderView;
@property (assign,nonatomic) double initialZoomScale;                                     //@synthesize initialZoomScale=_initialZoomScale - In the implementation block
@property (nonatomic,retain) UIColor * backgroundColorForUnRenderedContent;
@property (assign,nonatomic) BOOL hideActivityIndicatorForUnRenderedContent;
@property (assign,nonatomic) BOOL hidePageViewsUntilReadyToRender;
@property (assign,nonatomic) long long ignoreContentOffsetChanges;                        //@synthesize ignoreContentOffsetChanges=_ignoreContentOffsetChanges - In the implementation block
@property (assign,nonatomic) CGAffineTransform documentTransform;                         //@synthesize documentTransform=_documentTransform - In the implementation block
@property (nonatomic,retain) NSString * documentPassword;
@property (nonatomic,readonly) double documentScale;                                      //@synthesize documentScale=_documentScale - In the implementation block
@property (nonatomic,retain) NSArray * pageRects;
@property (nonatomic,retain) NSArray * pageMinYs;                                         //@synthesize pageMinYs=_pageMinYs - In the implementation block
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (copy,readonly) NSString * description;
@property (copy,readonly) NSString * debugDescription;
+(void)initialize;
+(void)setAsPDFDocRepAndView;
-(void)dealloc;
-(BOOL)gestureRecognizerShouldBegin:(id)arg1 ;
-(BOOL)canPerformAction:(SEL)arg1 withSender:(id)arg2 ;
-(void)_didScroll;
-(void)_define:(id)arg1 ;
-(void)clearSelection;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(CGRect)documentBounds;
-(unsigned long long)totalPages;
-(NSArray *)pageRects;
-(void)didReceiveMemoryWarning:(id)arg1 ;
-(void)willRotate:(id)arg1 ;
-(void)didRotate:(id)arg1 ;
-(UIPDFDocument *)document;
-(id)_selection;
-(id)uiPDFDocument;
-(void)setBackgroundColorForUnRenderedContent:(UIColor *)arg1 ;
-(void)setPdfPlaceHolderView:(WebPDFViewPlaceholder *)arg1 ;
-(WebPDFViewPlaceholder *)pdfPlaceHolderView;
-(void)didCompleteLayout;
-(void)_tapGestureRecognized:(id)arg1 ;
-(void)willZoom:(id)arg1 ;
-(void)didZoom:(id)arg1 ;
-(void)willScroll:(id)arg1 ;
-(void)setPageRects:(NSArray *)arg1 ;
-(void)setPageMinYs:(NSArray *)arg1 ;
-(void)setDocumentURL:(NSURL *)arg1 ;
-(void)setDocumentPassword:(NSString *)arg1 ;
-(void)_removeBackgroundImageObserverIfNeeded:(id)arg1 ;
-(id)viewportView;
-(CGRect)_viewportBoundsInUIVIewCoordsWithView:(id)arg1 ;
-(void)setReadyForSnapshot:(BOOL)arg1 ;
-(id)viewAtIndex:(long long)arg1 ;
-(id)_installViewAtIndex:(long long)arg1 inFrame:(CGRect)arg2 ;
-(CGRect)_viewCachingBoundsInUIViewCoords;
-(void)_removePageViewsNotInViewCoordsRect:(CGRect)arg1 ;
-(void)_removePageViewsNotInCurrentViewCoordsRect;
-(void)_addSubViewsInViewCoordsBounds:(CGRect)arg1 force:(BOOL)arg2 ;
-(void)_scheduleRemovePageViewsNotInViewCoordsRect;
-(void)ensureCorrectPagesAreInstalled:(BOOL)arg1 ;
-(CGRect)_viewportBoundsInUIViewCoords;
-(void)_recreateUIPDFDocument;
-(NSString *)documentPassword;
-(BOOL)_checkIfDocumentNeedsUnlock;
-(void)resetZoom:(id)arg1 ;
-(void)_didTouch:(id)arg1 inRect:(CGRect)arg2 atPoint:(CGPoint)arg3 linkingToURL:(id)arg4 ;
-(void)_didTouch:(id)arg1 inRect:(CGRect)arg2 atPoint:(CGPoint)arg3 linkingToPageIndex:(unsigned long long)arg4 ;
-(void)_didLongPress:(id)arg1 inRect:(CGRect)arg2 atPoint:(CGPoint)arg3 linkingToURL:(id)arg4 ;
-(void)_didLongPress:(id)arg1 inRect:(CGRect)arg2 atPoint:(CGPoint)arg3 linkingToPageIndex:(unsigned long long)arg4 ;
-(id)_pageWithSelection;
-(unsigned long long)_pageNumberForRect:(CGRect)arg1 ;
-(CGPDFDocumentRef)cgPDFDocument;
-(void)zoom:(id)arg1 to:(CGRect)arg2 atPoint:(CGPoint)arg3 kind:(int)arg4 ;
-(void)annotation:(id)arg1 wasTouchedAtPoint:(CGPoint)arg2 controller:(id)arg3 ;
-(void)annotation:(id)arg1 isBeingPressedAtPoint:(CGPoint)arg2 controller:(id)arg3 ;
-(void)viewWillClose;
-(void)setIgnoreContentOffsetChanges:(long long)arg1 ;
-(void)setPdfDelegate:(NSObject<UIWebPDFViewDelegate>*)arg1 ;
-(BOOL)_hasPageRects;
-(NSData *)documentData;
-(id)initWithWebPDFViewPlaceholder:(id)arg1 ;
-(id)_addPageAtIndex:(unsigned long long)arg1 ;
-(unsigned long long)firstVisiblePageNumber;
-(void)prepareForSnapshot:(BOOL)arg1 ;
-(void)snapshotComplete;
-(BOOL)_tryToUnlockDocumentWithPassword:(id)arg1 ;
-(id)imageForContactRect:(CGRect)arg1 onPageInViewRect:(CGRect)arg2 destinationRect:(CGRect)arg3 ;
-(NSURL *)documentURL;
-(NSObject<UIWebPDFViewDelegate>*)pdfDelegate;
-(double)initialZoomScale;
-(void)setInitialZoomScale:(double)arg1 ;
-(CGAffineTransform)documentTransform;
-(void)setDocumentTransform:(CGAffineTransform)arg1 ;
-(double)documentScale;
-(long long)ignoreContentOffsetChanges;
-(BOOL)hidePageViewsUntilReadyToRender;
-(void)setHidePageViewsUntilReadyToRender:(BOOL)arg1 ;
-(UIColor *)backgroundColorForUnRenderedContent;
-(BOOL)hideActivityIndicatorForUnRenderedContent;
-(void)setHideActivityIndicatorForUnRenderedContent:(BOOL)arg1 ;
-(BOOL)readyForSnapshot;
-(NSArray *)pageMinYs;
@end

#endif
